---
import Layout from "../layouts/Layout.astro";
import { Code } from "astro/components";
---
<Layout>
  <h1 class="display-3 txt-center">Personalizar</h1>
  <div class="container">
    <h2>Personalizar la plantilla</h2>
    <p>
      Si deseas personalizar los colores y la tipografÃ­a solo tienes que
      cambiarlos en un archivo css, busca el archivo <span class="txt-green"
        >themes.css</span
      > :
    </p>
    <Code
      code={`@import "https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;800&family=Work+Sans&display=swap";
:root {
  --font1: Montserrat, system-ui, sans-serif; /* Fuente de los tÃ­tulos */
  --font2: "Work Sans", system-ui, sans-serif; /* Fuente general */
  --cont-wh: 1200px; /* Ancho de la pantalla */
  --primary: #98f098;
  --secondary: #cce0cc;
  --accent: #313849;
  --font-color: #16181d; /* Color de la fuente */
  --background: radial-gradient(hsl(220, 40%, 94%), hsl(220, 14%, 94%)); /* Color Fondo */
  --green: #45d25a;
  --red: #dc3243;
  --yellow: #f2c94c;
  --blue: #4024ca;
  --radius: 1.5rem; /* Radio de las cards */
}
`}
      lang="css"
      theme="dracula-soft"
    />
    <p>
      al ser un archivo css, realmente es muy fÃ¡cil cambiar los valores que no
      te agraden, como las sombras, efectos hover y demÃ¡s.
    </p>
    <p>
      ðŸ’¡<b>TIP:</b> una vez realices los cambios en el archivo css, si tu editor
      tiene un formateador recuerda comprimir el archivo css.
    </p>
    <p>Pagina para comprimir CSS:</p>
    <a href="https://www.toptal.com/developers/cssminifier">CSS Compressor</a>
    <br />
    <p>
      TambiÃ©n puedes usar una clase y modificarla, siendo mÃ¡s especifico o
      usando Â´!importantÂ´
    </p>
    <Code
      code={`.btn{ background-color: #00d26a !important;}`}
      lang="css"
      theme="dracula-soft"
    />
    <h2>Crear Tema</h2>
    <p>
      Si deseas crear un tema nuevo, solo tienes que crear un archivo css y
      definir una clase, poniendo las variables que deseas cambiar(las variables
      que admite son las que se muestran arriba en root) :
    </p>
    <Code
      code={`:root[data-theme='dark'] {
  --primary: #98f098;
  --font-color: #f9fafb;
  --background: #16181d;
  --secondary: #232529;
  --accent: #727fa1
}`}
      lang="css"
      theme="dracula-soft"
    />
    <h3>Cambio de tema con JS</h3>
    <p>
      Para cambiar el tema solo tienes que cambiar la clase del body o el html,
      por ejemplo:
    </p>
    <Code
      code={`/* Definimos un checkbox */
<div class="toggle-btn" id="light-mode-toggle">
  <label title="Use light theme" aria-label="Use light theme">
    <input type="checkbox" name="light-mode-toggle" />
    <span></span>
  </label>
</div>
/*Las clases para crear el checkbox son de un css aparte */`}
      lang="html"
      theme="dracula-soft"
    />
    <Code
      code={`// creamos una constante para el checkbox
const toggle = document.getElementById("light-mode-toggle");
// creamos un evento para el checkbox
toggle.addEventListener("change", (e) => {
  // si el checkbox esta desactivado
  if (e.target.checked == false) {
    // guardamos en el localStorage que el modo oscuro esta desactivado
    localStorage.setItem("dark", "false");
    // removemos el atributo data-theme
    document.documentElement.removeAttribute("data-theme");
  } else {
    // si el checkbox esta activado guardamos en el localStorage que el modo oscuro esta activado
    localStorage.setItem("dark", "true");
    // agregamos el atributo data-theme con el valor "dark"
    document.documentElement.setAttribute("data-theme", "dark");
  }
});

// comprobamos si el modo oscuro esta activado
if (localStorage.getItem("dark") === "true") {
  // si esta activado activamos el checkbox
  toggle.querySelector("input").checked = true;
  // agregamos el atributo data-theme con el valor "dark"
  document.documentElement.setAttribute("data-theme", "dark");
}`}
      lang="js"
      theme="dracula-soft"
    />
    ðŸ’¡<b>TIP:</b> si deseas cambiar el tema con un botÃ³n, solo tienes que cambiar
    el input por un button y agregarle un evento onclick. <br />
    Nota : si estas usando Astro Js, usa
    <Code code={`<script is:inline>...</script>`} lang="html" />
  </div>
</Layout>

<style>
  .container {
    max-width: 90%;
    width: 1200px;
    margin: 20px auto;
    overflow: hidden;
  }
</style>
